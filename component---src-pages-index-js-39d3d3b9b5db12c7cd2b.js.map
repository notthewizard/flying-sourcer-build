{"version":3,"file":"component---src-pages-index-js-39d3d3b9b5db12c7cd2b.js","mappings":"oJAIMA,EAAa,CACjBC,MAAO,UACPC,QAAS,GACTC,WAAY,4CAERC,EAAgB,CACpBC,UAAW,EACXC,aAAc,GACdC,SAAU,KAGNC,EAAkB,CACtBF,aAAc,IAGVG,EAAa,CACjBH,aAAc,GACdI,YAAa,EACbC,cAAe,QAEXC,EAAiB,CACrBC,SAAU,GACVC,OAAQ,iBACRC,WAAY,OACZT,aAAc,MACdI,YAAa,MACbM,aAAc,QAGVC,EAAmB,CACvBhB,MAAO,UACPY,SAAU,GACVR,UAAW,GACXC,aAAc,EACdY,WAAY,MA4Dd,UAxDkB,WAChB,IAiBIC,GAjBUC,EAAAA,EAAAA,IAAe,YAiBPC,aAAaC,MAEnC,OACE,wBAAMC,MAAOvB,GACX,+CACA,sBAAIuB,MAAOnB,GAAX,kBAGA,qBAAGmB,MAAOf,GAAV,iCAGA,kDACA,sBAAIe,MAAOd,GACRU,EAAUK,KAAI,SAACC,EAAMC,GAAP,OACb,qBAAGC,MAASF,EAAKG,OAAR,IAAkBH,EAAKI,KAAvB,IAA+BJ,EAAKK,OAAOC,MAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIC,eAC3F,sBAAIC,IAAKT,EAAKI,KAAOH,EAAOH,MAAK,iBAAOX,IACtC,0BAQKa,EAAKG,OARV,MAQqBH,EAAKI,KAR1B,MAQmCJ,EAAKK,OAAOC,KAAK,2BAC/CN,EAAKU,MATV,MASoBV,EAAKW,KACrB,qBAAGb,MAAON,GACPQ,EAAKY","sources":["webpack://flying-sourcer/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 40,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n}\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n}\n\nconst paragraphStyles = {\n  marginBottom: 48,\n}\n\nconst listStyles = {\n  marginBottom: 96,\n  paddingLeft: 0,\n  listStyleType: 'none',\n}\nconst listItemStyles = {\n  fontSize: 18,\n  border: '1px solid gray',\n  background: '#eee',\n  marginBottom: '1em',\n  paddingLeft: '1em',\n  borderRadius: '20px',\n}\n\nconst descriptionStyle = {\n  color: \"#232129\",\n  fontSize: 14,\n  marginTop: 10,\n  marginBottom: 0,\n  lineHeight: 1.25,\n}\n\n// markup\nconst IndexPage = () => {\n  const shows = useStaticQuery(graphql`\n    query ShowQuery {\n      allShowsJson {\n        nodes {\n          artist\n          city\n          date\n          venue\n          generation\n          source {\n            name\n          }\n        }\n      }\n    }\n  `)\n\n  let showsData = shows.allShowsJson.nodes\n\n  return (\n    <main style={pageStyles}>\n      <title>Flying sourcer</title>\n      <h1 style={headingStyles}>\n        Flying sourcer\n      </h1>\n      <p style={paragraphStyles}>\n        Your favourite inside source.\n      </p>\n      <h2>Show and source list</h2>\n      <ul style={listStyles}>\n        {showsData.map((show, index) => (\n          <a href={`${show.artist}-${show.date}-${show.source.name}`.replace('#', '').replace(' ', '').toLowerCase()} >\n            <li key={show.date + index} style={{ ...listItemStyles }}>\n              <h3>\n                  {/* artist\n                      city\n                      date\n                      venue\n                      generation\n                  */}\n\n                  {show.artist} - {show.date} - {show.source.name}<br />\n                  {show.venue} - {show.city} \n                  <p style={descriptionStyle}>\n                    {show.generation}\n                  </p>\n              </h3>\n            </li>\n          </a>\n        ))}\n      </ul>\n    </main>\n  )\n}\n\nexport default IndexPage\n"],"names":["pageStyles","color","padding","fontFamily","headingStyles","marginTop","marginBottom","maxWidth","paragraphStyles","listStyles","paddingLeft","listStyleType","listItemStyles","fontSize","border","background","borderRadius","descriptionStyle","lineHeight","showsData","useStaticQuery","allShowsJson","nodes","style","map","show","index","href","artist","date","source","name","replace","toLowerCase","key","venue","city","generation"],"sourceRoot":""}